{"prefix": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 2, 49, 119, 2, 88, 129, 2, 56, 2, 88, 129, 2, 56, 2, 88, 50, 88, 119, 2, 47, 119, 2, 45, 46, 91, 119, 2, 91, 119, 2, 48, 49, 119, 2, 88, 115, 47, 2, 89, 33, 88, 2, 72, 2, 88, 2, 59, 48, 49, 117, 47], "postfix": [47, 124, 48, 33, 90, 2, 84, 33, 90, 2, 84, 48, 33, 48, 56, 134, 47, 47, 90, 2, 84, 48, 33, 48, 56, 134, 47, 47, 90, 2, 47, 117, 49, 48, 2, 119, 91, 2, 56, 119, 91, 2, 119, 91, 2, 56, 119, 47, 2, 56, 2, 129, 50, 88, 33, 61, 124, 50, 50, 88, 2, 124, 49, 48], "label-type": [2, 47, 2, 91, 2, 91, 2, 48, 0, 0], "prefix-text": ["", "", "", "", "", "", "", "", "", "", "", "", "struct", "TreeNode", "{", "int", "val", ";", "struct", "TreeNode", "*", "left", ";", "struct", "TreeNode", "*", "right", ";", "}", ";", "int", "searchNode", "(", "int", "inorder", "[", "]", ",", "int", "inorderSize", ",", "int", "key", ")", "{", "int", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "inorderSize", ";", "i", "++", ")", "{", "if", "("], "postfix-text": ["(", "return", ")", "0", "==", "inorderSize", "||", "0", "==", "preorderSize", "||", ")", "0", ")", "*", "void", "(", "(", "==", "inorder", "||", ")", "0", ")", "*", "void", "(", "(", "==", "preorder", "(", "if", "{", ")", "inorderSize", "int", ",", "inorder", "*", "int", ",", "preorderSize", "int", ",", "preorder", "*", "int", "(", "buildTree", "*", "TreeNode", "struct", "}", ";", "1", "-", "return", "}", "}", ";", "i", "return", "{", ")"], "label-length": 8}