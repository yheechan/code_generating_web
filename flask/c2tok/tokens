void 'void'	 [StartOfLine]	Loc=<00_45_13.c:2:1>
identifier 'sort'	 [LeadingSpace]	Loc=<00_45_13.c:2:6>
l_paren '('	 [LeadingSpace]	Loc=<00_45_13.c:2:11>
int 'int'		Loc=<00_45_13.c:2:12>
star '*'	 [LeadingSpace]	Loc=<00_45_13.c:2:16>
identifier 'a'	 [LeadingSpace]	Loc=<00_45_13.c:2:18>
comma ','		Loc=<00_45_13.c:2:19>
int 'int'	 [LeadingSpace]	Loc=<00_45_13.c:2:21>
identifier 'n'	 [LeadingSpace]	Loc=<00_45_13.c:2:25>
r_paren ')'		Loc=<00_45_13.c:2:26>
l_brace '{'	 [StartOfLine]	Loc=<00_45_13.c:3:1>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:4:9>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:4:13>
comma ','		Loc=<00_45_13.c:4:14>
identifier 'j'	 [LeadingSpace]	Loc=<00_45_13.c:4:16>
comma ','		Loc=<00_45_13.c:4:17>
identifier 't'	 [LeadingSpace]	Loc=<00_45_13.c:4:19>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:4:21>
for 'for'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:5:9>
l_paren '('	 [LeadingSpace]	Loc=<00_45_13.c:5:13>
identifier 'i'		Loc=<00_45_13.c:5:14>
equal '='	 [LeadingSpace]	Loc=<00_45_13.c:5:16>
numeric_constant '0'	 [LeadingSpace]	Loc=<00_45_13.c:5:18>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:5:20>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:5:22>
less '<'	 [LeadingSpace]	Loc=<00_45_13.c:5:24>
identifier 'n'	 [LeadingSpace]	Loc=<00_45_13.c:5:26>
minus '-'	 [LeadingSpace]	Loc=<00_45_13.c:5:28>
numeric_constant '1'	 [LeadingSpace]	Loc=<00_45_13.c:5:30>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:5:32>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:5:34>
plusplus '++'		Loc=<00_45_13.c:5:35>
r_paren ')'		Loc=<00_45_13.c:5:37>
l_brace '{'	 [LeadingSpace]	Loc=<00_45_13.c:5:39>
for 'for'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:6:17>
l_paren '('	 [LeadingSpace]	Loc=<00_45_13.c:6:21>
identifier 'j'		Loc=<00_45_13.c:6:22>
equal '='	 [LeadingSpace]	Loc=<00_45_13.c:6:24>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:6:26>
plus '+'	 [LeadingSpace]	Loc=<00_45_13.c:6:28>
numeric_constant '1'	 [LeadingSpace]	Loc=<00_45_13.c:6:30>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:6:32>
identifier 'j'	 [LeadingSpace]	Loc=<00_45_13.c:6:34>
less '<'	 [LeadingSpace]	Loc=<00_45_13.c:6:36>
identifier 'n'	 [LeadingSpace]	Loc=<00_45_13.c:6:38>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:6:40>
identifier 'j'	 [LeadingSpace]	Loc=<00_45_13.c:6:42>
plusplus '++'		Loc=<00_45_13.c:6:43>
r_paren ')'		Loc=<00_45_13.c:6:45>
l_brace '{'	 [LeadingSpace]	Loc=<00_45_13.c:6:47>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:7:25>
l_paren '('	 [LeadingSpace]	Loc=<00_45_13.c:7:28>
exclaim '!'		Loc=<00_45_13.c:7:29>
l_paren '('		Loc=<00_45_13.c:7:30>
identifier 'a'		Loc=<00_45_13.c:7:31>
l_square '['		Loc=<00_45_13.c:7:32>
identifier 'i'		Loc=<00_45_13.c:7:33>
r_square ']'		Loc=<00_45_13.c:7:34>
less '<'	 [LeadingSpace]	Loc=<00_45_13.c:7:36>
identifier 'a'	 [LeadingSpace]	Loc=<00_45_13.c:7:38>
l_square '['		Loc=<00_45_13.c:7:39>
identifier 'j'		Loc=<00_45_13.c:7:40>
r_square ']'		Loc=<00_45_13.c:7:41>
r_paren ')'		Loc=<00_45_13.c:7:42>
r_paren ')'		Loc=<00_45_13.c:7:43>
l_brace '{'	 [LeadingSpace]	Loc=<00_45_13.c:7:45>
identifier 't'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:8:33>
equal '='	 [LeadingSpace]	Loc=<00_45_13.c:8:35>
identifier 'a'	 [LeadingSpace]	Loc=<00_45_13.c:8:37>
l_square '['		Loc=<00_45_13.c:8:38>
identifier 'i'		Loc=<00_45_13.c:8:39>
r_square ']'		Loc=<00_45_13.c:8:40>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:8:42>
identifier 'a'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:9:33>
l_square '['		Loc=<00_45_13.c:9:34>
identifier 'i'		Loc=<00_45_13.c:9:35>
r_square ']'		Loc=<00_45_13.c:9:36>
equal '='	 [LeadingSpace]	Loc=<00_45_13.c:9:38>
identifier 'a'	 [LeadingSpace]	Loc=<00_45_13.c:9:40>
l_square '['		Loc=<00_45_13.c:9:41>
identifier 'j'		Loc=<00_45_13.c:9:42>
r_square ']'		Loc=<00_45_13.c:9:43>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:9:45>
identifier 'a'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:10:33>
l_square '['		Loc=<00_45_13.c:10:34>
identifier 'j'		Loc=<00_45_13.c:10:35>
r_square ']'		Loc=<00_45_13.c:10:36>
equal '='	 [LeadingSpace]	Loc=<00_45_13.c:10:38>
identifier 't'	 [LeadingSpace]	Loc=<00_45_13.c:10:40>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:10:42>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:11:25>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:12:17>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:13:9>
r_brace '}'	 [StartOfLine]	Loc=<00_45_13.c:14:1>
int 'int'	 [StartOfLine]	Loc=<00_45_13.c:15:1>
identifier 'main'	 [LeadingSpace]	Loc=<00_45_13.c:15:5>
l_paren '('	 [LeadingSpace]	Loc=<00_45_13.c:15:10>
r_paren ')'		Loc=<00_45_13.c:15:11>
l_brace '{'	 [StartOfLine]	Loc=<00_45_13.c:16:1>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:17:9>
identifier 'n'	 [LeadingSpace]	Loc=<00_45_13.c:17:13>
comma ','		Loc=<00_45_13.c:17:14>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:17:16>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:17:18>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:18:9>
identifier 'a'	 [LeadingSpace]	Loc=<00_45_13.c:18:13>
l_square '['		Loc=<00_45_13.c:18:14>
numeric_constant '10'		Loc=<00_45_13.c:18:15>
r_square ']'		Loc=<00_45_13.c:18:17>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:18:19>
identifier 'scanf'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:19:9>
l_paren '('		Loc=<00_45_13.c:19:14>
string_literal '"%d"'		Loc=<00_45_13.c:19:15>
comma ','		Loc=<00_45_13.c:19:19>
amp '&'	 [LeadingSpace]	Loc=<00_45_13.c:19:21>
identifier 'n'		Loc=<00_45_13.c:19:22>
r_paren ')'		Loc=<00_45_13.c:19:23>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:19:25>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:20:9>
l_paren '('	 [LeadingSpace]	Loc=<00_45_13.c:20:12>
identifier '$$'		Loc=<00_45_13.c:20:13>
pipepipe '||'	 [LeadingSpace]	Loc=<00_45_13.c:20:16>
numeric_constant '10'	 [LeadingSpace]	Loc=<00_45_13.c:20:19>
less '<'	 [LeadingSpace]	Loc=<00_45_13.c:20:22>
identifier 'n'	 [LeadingSpace]	Loc=<00_45_13.c:20:24>
r_paren ')'		Loc=<00_45_13.c:20:25>
l_brace '{'	 [LeadingSpace]	Loc=<00_45_13.c:20:27>
identifier 'fprintf'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:21:17>
l_paren '('		Loc=<00_45_13.c:21:24>
identifier 'stderr'	 [ExpandDisabled]	Loc=<00_45_13.c:21:25 <Spelling=/usr/include/stdio.h:143:16>>
comma ','		Loc=<00_45_13.c:21:31>
string_literal '"invalid input"'	 [LeadingSpace]	Loc=<00_45_13.c:21:33>
r_paren ')'		Loc=<00_45_13.c:21:48>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:21:50>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:22:17>
numeric_constant '1'	 [LeadingSpace]	Loc=<00_45_13.c:22:24>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:22:26>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:23:9>
for 'for'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:24:9>
l_paren '('	 [LeadingSpace]	Loc=<00_45_13.c:24:13>
identifier 'i'		Loc=<00_45_13.c:24:14>
equal '='	 [LeadingSpace]	Loc=<00_45_13.c:24:16>
numeric_constant '0'	 [LeadingSpace]	Loc=<00_45_13.c:24:18>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:24:20>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:24:22>
less '<'	 [LeadingSpace]	Loc=<00_45_13.c:24:24>
identifier 'n'	 [LeadingSpace]	Loc=<00_45_13.c:24:26>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:24:28>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:24:30>
plusplus '++'		Loc=<00_45_13.c:24:31>
r_paren ')'		Loc=<00_45_13.c:24:33>
identifier 'scanf'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:25:17>
l_paren '('		Loc=<00_45_13.c:25:22>
string_literal '"%d"'		Loc=<00_45_13.c:25:23>
comma ','		Loc=<00_45_13.c:25:27>
amp '&'	 [LeadingSpace]	Loc=<00_45_13.c:25:29>
l_paren '('		Loc=<00_45_13.c:25:30>
identifier 'a'		Loc=<00_45_13.c:25:31>
l_square '['		Loc=<00_45_13.c:25:32>
identifier 'i'		Loc=<00_45_13.c:25:33>
r_square ']'		Loc=<00_45_13.c:25:34>
r_paren ')'		Loc=<00_45_13.c:25:35>
r_paren ')'		Loc=<00_45_13.c:25:36>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:25:38>
identifier 'sort'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:26:9>
l_paren '('		Loc=<00_45_13.c:26:13>
identifier 'a'		Loc=<00_45_13.c:26:14>
comma ','		Loc=<00_45_13.c:26:15>
identifier 'n'	 [LeadingSpace]	Loc=<00_45_13.c:26:17>
r_paren ')'		Loc=<00_45_13.c:26:18>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:26:20>
for 'for'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:27:9>
l_paren '('	 [LeadingSpace]	Loc=<00_45_13.c:27:13>
identifier 'i'		Loc=<00_45_13.c:27:14>
equal '='	 [LeadingSpace]	Loc=<00_45_13.c:27:16>
numeric_constant '0'	 [LeadingSpace]	Loc=<00_45_13.c:27:18>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:27:20>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:27:22>
less '<'	 [LeadingSpace]	Loc=<00_45_13.c:27:24>
identifier 'n'	 [LeadingSpace]	Loc=<00_45_13.c:27:26>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:27:28>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:27:30>
plusplus '++'		Loc=<00_45_13.c:27:31>
r_paren ')'		Loc=<00_45_13.c:27:33>
l_brace '{'	 [LeadingSpace]	Loc=<00_45_13.c:27:35>
identifier 'printf'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:28:17>
l_paren '('		Loc=<00_45_13.c:28:23>
string_literal '"%d"'		Loc=<00_45_13.c:28:24>
comma ','		Loc=<00_45_13.c:28:28>
star '*'	 [LeadingSpace]	Loc=<00_45_13.c:28:30>
l_paren '('		Loc=<00_45_13.c:28:31>
identifier 'a'		Loc=<00_45_13.c:28:32>
plus '+'	 [LeadingSpace]	Loc=<00_45_13.c:28:34>
identifier 'i'	 [LeadingSpace]	Loc=<00_45_13.c:28:36>
r_paren ')'		Loc=<00_45_13.c:28:37>
r_paren ')'		Loc=<00_45_13.c:28:38>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:28:40>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:29:9>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<00_45_13.c:30:9>
numeric_constant '0'	 [LeadingSpace]	Loc=<00_45_13.c:30:16>
semi ';'	 [LeadingSpace]	Loc=<00_45_13.c:30:18>
r_brace '}'	 [StartOfLine]	Loc=<00_45_13.c:31:1>
eof ''		Loc=<00_45_13.c:31:2>
