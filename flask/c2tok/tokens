void 'void'	 [StartOfLine]	Loc=<test.c:3:1>
identifier 'sort'	 [LeadingSpace]	Loc=<test.c:3:6>
l_paren '('	 [LeadingSpace]	Loc=<test.c:3:11>
int 'int'		Loc=<test.c:3:12>
star '*'	 [LeadingSpace]	Loc=<test.c:3:16>
identifier 'a'	 [LeadingSpace]	Loc=<test.c:3:18>
comma ','		Loc=<test.c:3:19>
int 'int'	 [LeadingSpace]	Loc=<test.c:3:21>
identifier 'n'	 [LeadingSpace]	Loc=<test.c:3:25>
r_paren ')'		Loc=<test.c:3:26>
l_brace '{'	 [StartOfLine]	Loc=<test.c:4:1>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:5:2>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:5:6>
comma ','		Loc=<test.c:5:7>
identifier 'j'	 [LeadingSpace]	Loc=<test.c:5:9>
comma ','		Loc=<test.c:5:10>
identifier 't'	 [LeadingSpace]	Loc=<test.c:5:12>
semi ';'	 [LeadingSpace]	Loc=<test.c:5:14>
for 'for'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:7:2>
l_paren '('	 [LeadingSpace]	Loc=<test.c:7:6>
identifier 'i'		Loc=<test.c:7:7>
equal '='	 [LeadingSpace]	Loc=<test.c:7:9>
numeric_constant '0'	 [LeadingSpace]	Loc=<test.c:7:11>
semi ';'	 [LeadingSpace]	Loc=<test.c:7:13>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:7:15>
less '<'	 [LeadingSpace]	Loc=<test.c:7:17>
identifier 'n'	 [LeadingSpace]	Loc=<test.c:7:19>
minus '-'	 [LeadingSpace]	Loc=<test.c:7:21>
numeric_constant '1'	 [LeadingSpace]	Loc=<test.c:7:23>
semi ';'	 [LeadingSpace]	Loc=<test.c:7:25>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:7:27>
plusplus '++'		Loc=<test.c:7:28>
r_paren ')'		Loc=<test.c:7:30>
l_brace '{'	 [LeadingSpace]	Loc=<test.c:7:32>
for 'for'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:8:3>
l_paren '('	 [LeadingSpace]	Loc=<test.c:8:7>
identifier 'j'		Loc=<test.c:8:8>
equal '='	 [LeadingSpace]	Loc=<test.c:8:10>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:8:12>
plus '+'	 [LeadingSpace]	Loc=<test.c:8:14>
numeric_constant '1'	 [LeadingSpace]	Loc=<test.c:8:16>
semi ';'	 [LeadingSpace]	Loc=<test.c:8:18>
identifier 'j'	 [LeadingSpace]	Loc=<test.c:8:20>
less '<'	 [LeadingSpace]	Loc=<test.c:8:22>
identifier 'n'	 [LeadingSpace]	Loc=<test.c:8:24>
semi ';'	 [LeadingSpace]	Loc=<test.c:8:26>
identifier 'j'	 [LeadingSpace]	Loc=<test.c:8:28>
plusplus '++'		Loc=<test.c:8:29>
r_paren ')'		Loc=<test.c:8:31>
l_brace '{'	 [LeadingSpace]	Loc=<test.c:8:33>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:9:4>
l_paren '('	 [LeadingSpace]	Loc=<test.c:9:7>
exclaim '!'		Loc=<test.c:9:8>
l_paren '('		Loc=<test.c:9:9>
identifier 'a'		Loc=<test.c:9:10>
l_square '['		Loc=<test.c:9:11>
identifier 'i'		Loc=<test.c:9:12>
r_square ']'		Loc=<test.c:9:13>
less '<'	 [LeadingSpace]	Loc=<test.c:9:15>
identifier 'a'	 [LeadingSpace]	Loc=<test.c:9:17>
l_square '['		Loc=<test.c:9:18>
identifier 'j'		Loc=<test.c:9:19>
r_square ']'		Loc=<test.c:9:20>
r_paren ')'		Loc=<test.c:9:21>
r_paren ')'		Loc=<test.c:9:22>
l_brace '{'	 [LeadingSpace]	Loc=<test.c:9:24>
identifier 't'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:10:5>
equal '='	 [LeadingSpace]	Loc=<test.c:10:7>
identifier 'a'	 [LeadingSpace]	Loc=<test.c:10:9>
l_square '['		Loc=<test.c:10:10>
identifier 'i'		Loc=<test.c:10:11>
r_square ']'		Loc=<test.c:10:12>
semi ';'	 [LeadingSpace]	Loc=<test.c:10:14>
identifier 'a'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:11:5>
l_square '['		Loc=<test.c:11:6>
identifier 'i'		Loc=<test.c:11:7>
r_square ']'		Loc=<test.c:11:8>
equal '='	 [LeadingSpace]	Loc=<test.c:11:10>
identifier 'a'	 [LeadingSpace]	Loc=<test.c:11:12>
l_square '['		Loc=<test.c:11:13>
identifier 'j'		Loc=<test.c:11:14>
r_square ']'		Loc=<test.c:11:15>
semi ';'	 [LeadingSpace]	Loc=<test.c:11:17>
identifier 'a'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:12:5>
l_square '['		Loc=<test.c:12:6>
identifier 'j'		Loc=<test.c:12:7>
r_square ']'		Loc=<test.c:12:8>
equal '='	 [LeadingSpace]	Loc=<test.c:12:10>
identifier 't'	 [LeadingSpace]	Loc=<test.c:12:12>
semi ';'	 [LeadingSpace]	Loc=<test.c:12:14>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:13:4>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:14:3>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:15:2>
r_brace '}'	 [StartOfLine]	Loc=<test.c:16:1>
int 'int'	 [StartOfLine]	Loc=<test.c:19:1>
identifier 'main'	 [LeadingSpace]	Loc=<test.c:19:5>
l_paren '('	 [LeadingSpace]	Loc=<test.c:19:10>
r_paren ')'		Loc=<test.c:19:11>
l_brace '{'	 [StartOfLine]	Loc=<test.c:20:1>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:21:2>
identifier 'n'	 [LeadingSpace]	Loc=<test.c:21:6>
comma ','		Loc=<test.c:21:7>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:21:9>
semi ';'	 [LeadingSpace]	Loc=<test.c:21:11>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:22:2>
identifier 'a'	 [LeadingSpace]	Loc=<test.c:22:6>
l_square '['		Loc=<test.c:22:7>
numeric_constant '10'		Loc=<test.c:22:8>
r_square ']'		Loc=<test.c:22:10>
semi ';'	 [LeadingSpace]	Loc=<test.c:22:12>
identifier 'scanf'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:24:2>
l_paren '('		Loc=<test.c:24:7>
string_literal '"%d"'		Loc=<test.c:24:8>
comma ','		Loc=<test.c:24:12>
amp '&'	 [LeadingSpace]	Loc=<test.c:24:14>
identifier 'n'		Loc=<test.c:24:15>
r_paren ')'		Loc=<test.c:24:16>
semi ';'	 [LeadingSpace]	Loc=<test.c:24:18>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:26:2>
l_paren '('	 [LeadingSpace]	Loc=<test.c:26:5>
identifier '$$'		Loc=<test.c:26:6>
pipepipe '||'	 [LeadingSpace]	Loc=<test.c:26:9>
numeric_constant '10'	 [LeadingSpace]	Loc=<test.c:26:12>
less '<'	 [LeadingSpace]	Loc=<test.c:26:15>
identifier 'n'	 [LeadingSpace]	Loc=<test.c:26:17>
r_paren ')'		Loc=<test.c:26:18>
l_brace '{'	 [LeadingSpace]	Loc=<test.c:26:20>
identifier 'fprintf'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:27:3>
l_paren '('		Loc=<test.c:27:10>
identifier 'stderr'	 [ExpandDisabled]	Loc=<test.c:27:11 <Spelling=/usr/include/stdio.h:143:16>>
comma ','		Loc=<test.c:27:17>
string_literal '"invalid input"'	 [LeadingSpace]	Loc=<test.c:27:19>
r_paren ')'		Loc=<test.c:27:34>
semi ';'	 [LeadingSpace]	Loc=<test.c:27:36>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:28:3>
numeric_constant '1'	 [LeadingSpace]	Loc=<test.c:28:10>
semi ';'	 [LeadingSpace]	Loc=<test.c:28:12>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:29:2>
for 'for'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:31:2>
l_paren '('	 [LeadingSpace]	Loc=<test.c:31:6>
identifier 'i'		Loc=<test.c:31:7>
equal '='	 [LeadingSpace]	Loc=<test.c:31:9>
numeric_constant '0'	 [LeadingSpace]	Loc=<test.c:31:11>
semi ';'	 [LeadingSpace]	Loc=<test.c:31:13>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:31:15>
less '<'	 [LeadingSpace]	Loc=<test.c:31:17>
identifier 'n'	 [LeadingSpace]	Loc=<test.c:31:19>
semi ';'	 [LeadingSpace]	Loc=<test.c:31:21>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:31:23>
plusplus '++'		Loc=<test.c:31:24>
r_paren ')'		Loc=<test.c:31:26>
identifier 'scanf'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:32:3>
l_paren '('		Loc=<test.c:32:8>
string_literal '"%d"'		Loc=<test.c:32:9>
comma ','		Loc=<test.c:32:13>
amp '&'	 [LeadingSpace]	Loc=<test.c:32:15>
l_paren '('		Loc=<test.c:32:16>
identifier 'a'		Loc=<test.c:32:17>
l_square '['		Loc=<test.c:32:18>
identifier 'i'		Loc=<test.c:32:19>
r_square ']'		Loc=<test.c:32:20>
r_paren ')'		Loc=<test.c:32:21>
r_paren ')'		Loc=<test.c:32:22>
semi ';'	 [LeadingSpace]	Loc=<test.c:32:24>
identifier 'sort'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:34:2>
l_paren '('		Loc=<test.c:34:6>
identifier 'a'		Loc=<test.c:34:7>
comma ','		Loc=<test.c:34:8>
identifier 'n'	 [LeadingSpace]	Loc=<test.c:34:10>
r_paren ')'		Loc=<test.c:34:11>
semi ';'	 [LeadingSpace]	Loc=<test.c:34:13>
for 'for'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:36:2>
l_paren '('	 [LeadingSpace]	Loc=<test.c:36:6>
identifier 'i'		Loc=<test.c:36:7>
equal '='	 [LeadingSpace]	Loc=<test.c:36:9>
numeric_constant '0'	 [LeadingSpace]	Loc=<test.c:36:11>
semi ';'	 [LeadingSpace]	Loc=<test.c:36:13>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:36:15>
less '<'	 [LeadingSpace]	Loc=<test.c:36:17>
identifier 'n'	 [LeadingSpace]	Loc=<test.c:36:19>
semi ';'	 [LeadingSpace]	Loc=<test.c:36:21>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:36:23>
plusplus '++'		Loc=<test.c:36:24>
r_paren ')'		Loc=<test.c:36:26>
l_brace '{'	 [LeadingSpace]	Loc=<test.c:36:28>
identifier 'printf'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:37:3>
l_paren '('		Loc=<test.c:37:9>
string_literal '"%d"'		Loc=<test.c:37:10>
comma ','		Loc=<test.c:37:14>
star '*'	 [LeadingSpace]	Loc=<test.c:37:16>
l_paren '('		Loc=<test.c:37:17>
identifier 'a'		Loc=<test.c:37:18>
plus '+'	 [LeadingSpace]	Loc=<test.c:37:20>
identifier 'i'	 [LeadingSpace]	Loc=<test.c:37:22>
r_paren ')'		Loc=<test.c:37:23>
r_paren ')'		Loc=<test.c:37:24>
semi ';'	 [LeadingSpace]	Loc=<test.c:37:26>
r_brace '}'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:38:2>
return 'return'	 [StartOfLine] [LeadingSpace]	Loc=<test.c:40:2>
numeric_constant '0'	 [LeadingSpace]	Loc=<test.c:40:9>
semi ';'	 [LeadingSpace]	Loc=<test.c:40:11>
r_brace '}'	 [StartOfLine]	Loc=<test.c:41:1>
eof ''		Loc=<test.c:41:2>
